{"version":3,"sources":["reducer.js","context.js","Navbar.js","CartItem.js","CartContainer.js","App.js","index.js"],"names":["initialState","cartItems","totalPrice","totalItems","isLoading","reducer","state","action","type","payload","newItems","filter","item","id","newItems2","map","newAmount","amount","reduce","total","totalAmount","price","parseFloat","toFixed","Error","AppContext","React","createContext","AppProvider","children","useReducer","cart","dispatch","fetchData","a","fetch","response","json","cartData","useEffect","Provider","value","addItem","removeItem","useGlobalContext","useContext","Navbar","className","xmlns","viewBox","d","CartItem","img","title","src","alt","onClick","CartContainer","length","key","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8eb8c3ad.chunk.js","sourcesContent":["// import cartItems from \"./data\";\r\n\r\nexport const initialState = {\r\n    cartItems: [],\r\n    totalPrice: 0,\r\n    totalItems: 0,\r\n    isLoading: true,\r\n};\r\n\r\nexport const reducer = (state, action) => {\r\n\r\n    switch (action.type) {\r\n        case \"LOAD_DATA\":\r\n            return { ...state, cartItems: action.payload, isLoading: false };\r\n        case \"CLEAR_CART\":\r\n            return { ...state, cartItems: [], totalPrice: 0, totalItems: 0 };\r\n\r\n        case \"DELETE_ITEM\":\r\n            const newItems = state.cartItems.filter(\r\n                (item) => item.id !== action.payload\r\n            );\r\n            return {\r\n                ...state,\r\n                cartItems: newItems,\r\n            };\r\n\r\n\r\n        case \"ADD/REMOVE_ITEM\":\r\n            const newItems2 = state.cartItems\r\n                .map((item) => {\r\n                    if (item.id === action.payload.id) {\r\n                        let newAmount;\r\n                        if(action.payload.type === \"add\") {\r\n                            newAmount = item.amount + 1;\r\n                        } else if(action.payload.type === \"remove\") {\r\n                            newAmount = item.amount - 1;\r\n                        }\r\n                         \r\n                        \r\n                        \r\n                        return { ...item, amount: newAmount };\r\n                        \r\n                    }\r\n                    return item;\r\n                })\r\n                .filter((item) => item.amount !== 0);\r\n            return {\r\n                ...state,\r\n                cartItems: newItems2,\r\n            };\r\n\r\n        case \"UPDATE_TOTALS\":\r\n            let { totalAmount, totalPrice } = state.cartItems.reduce(\r\n                (total, item) => {\r\n                    total.totalAmount += item.amount;\r\n                    total.totalPrice += item.amount * item.price;\r\n                    return total;\r\n                },\r\n                {\r\n                    totalAmount: 0,\r\n                    totalPrice: 0,\r\n                }\r\n            );\r\n\r\n            totalPrice = parseFloat(totalPrice.toFixed(2));\r\n            return {\r\n                ...state,\r\n                totalPrice: totalPrice,\r\n                totalItems: totalAmount,\r\n            };\r\n\r\n        default:\r\n            throw new Error(\"No matching type\");\r\n    }\r\n};\r\n","import React, { useContext, useReducer, useEffect } from \"react\";\n// import cartItems from \"./data\";\nimport { reducer, initialState } from \"./reducer\";\n\nconst url = \"https://course-api.com/react-useReducer-cart-project\";\nconst AppContext = React.createContext();\n\nconst AppProvider = ({ children }) => {\n    const [cart, dispatch] = useReducer(reducer, initialState);\n\n    const fetchData = async () => {\n        const response = await fetch(url);\n        const cartData = await response.json();\n        dispatch({ type: \"LOAD_DATA\", payload: cartData });\n    };\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    useEffect(() => {\n        dispatch({ type: \"UPDATE_TOTALS\" });\n    }, [cart.cartItems]);\n\n    const addItem = (id) => {\n        dispatch({ type: \"ADD/REMOVE_ITEM\", payload: { id, type: \"add\" } });\n    };\n\n    const removeItem = (id) => {\n        dispatch({ type: \"ADD/REMOVE_ITEM\", payload: { id, type: \"remove\" } });\n    };\n    return (\n        <AppContext.Provider value={{ ...cart, dispatch, addItem, removeItem }}>\n            {children}\n        </AppContext.Provider>\n    );\n};\n// make sure use\nexport const useGlobalContext = () => {\n    return useContext(AppContext);\n};\n\nexport { AppContext, AppProvider };\n","import React from \"react\";\nimport { useGlobalContext } from \"./context\";\nconst Navbar = () => {\n    const { totalItems } = useGlobalContext();\n\n    return (\n        <nav>\n            <div className=\"nav-center\">\n                <h3>useReducer Cart</h3>\n                <div className=\"nav-container\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n                        <path d=\"M16 6v2h2l2 12H0L2 8h2V6a6 6 0 1 1 12 0zm-2 0a4 4 0 1 0-8 0v2h8V6zM4 10v2h2v-2H4zm10 0v2h2v-2h-2z\" />\n                    </svg>\n                    <div className=\"amount-container\">\n                        <p className=\"total-amount\">{totalItems}</p>\n                    </div>\n                </div>\n            </div>\n        </nav>\n    );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport { useGlobalContext } from \"./context\";\nconst CartItem = ({ id, img, title, price, amount }) => {\n    const { dispatch, addItem, removeItem } = useGlobalContext();\n\n    return (\n        <article className=\"cart-item\">\n            <img src={img} alt={title} />\n            <div>\n                <h4>{title}</h4>\n                <h4 className=\"item-price\">${price}</h4>\n                {/* remove button */}\n                <button\n                    className=\"remove-btn\"\n                    onClick={() =>\n                        dispatch({ type: \"DELETE_ITEM\", payload: id })\n                    }\n                >\n                    remove\n                </button>\n            </div>\n            <div>\n                {/* increase amount */}\n                <button className=\"amount-btn\" onClick={() => addItem(id)}>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n                        <path d=\"M10.707 7.05L10 6.343 4.343 12l1.414 1.414L10 9.172l4.243 4.242L15.657 12z\" />\n                    </svg>\n                </button>\n                {/* amount */}\n                <p className=\"amount\">{amount}</p>\n                {/* decrease amount */}\n                <button className=\"amount-btn\" onClick={() => removeItem(id)}>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n                        <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                    </svg>\n                </button>\n            </div>\n        </article>\n    );\n};\n\nexport default CartItem;\n","import React from \"react\";\nimport CartItem from \"./CartItem\";\nimport { useGlobalContext } from \"./context\";\n\nconst CartContainer = () => {\n    const { cartItems, totalPrice, dispatch } = useGlobalContext();\n\n    if (cartItems.length === 0) {\n        return (\n            <section className=\"cart\">\n                {/* cart header */}\n                <header>\n                    <h2>your bag</h2>\n                    <h4 className=\"empty-cart\">is currently empty</h4>\n                </header>\n            </section>\n        );\n    }\n    return (\n        <section className=\"cart\">\n            {/* cart header */}\n            <header>\n                <h2>your bag</h2>\n            </header>\n            {/* cart items */}\n            <div>\n                {cartItems.map((item) => {\n                    return <CartItem key={item.id} {...item} />;\n                })}\n            </div>\n            {/* cart footer */}\n            <footer>\n                <hr />\n                <div className=\"cart-total\">\n                    <h4>\n                        total <span>${totalPrice}</span>\n                    </h4>\n                </div>\n                <button\n                    className=\"btn clear-btn\"\n                    onClick={() => dispatch({ type: \"CLEAR_CART\" })}\n                >\n                    clear cart\n                </button>\n            </footer>\n        </section>\n    );\n};\n\nexport default CartContainer;\n","import React from \"react\";\nimport { useGlobalContext } from \"./context\";\n\n// components\nimport Navbar from \"./Navbar\";\nimport CartContainer from \"./CartContainer\";\n// items\n\nfunction App() {\n    const { isLoading } = useGlobalContext();\n    if (isLoading) {\n        return (\n            <div className=\"loading\">\n                <h1>Loading...</h1>\n            </div>\n        );\n    }\n    return (\n        <main>\n            <Navbar />\n            <CartContainer />\n        </main>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { AppProvider } from './context';\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}